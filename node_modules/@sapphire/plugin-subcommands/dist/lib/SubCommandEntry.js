"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubCommandEntry = void 0;
const framework_1 = require("@sapphire/framework");
const utilities_1 = require("@sapphire/utilities");
/**
 * @since 1.0.0
 * SubCommandEntry represents a basic subcommand entry. Methods and command names are supported in core.
 * @see {@link SubCommandEntryCommand}
 * @see {@link SubCommandEntryMethod}
 */
class SubCommandEntry {
    constructor(options) {
        Object.defineProperty(this, "input", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "output", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.input = options.input;
        if (!options.output && typeof options.input !== 'string')
            throw new ReferenceError('No output provided.');
        this.output = options.output ?? options.input;
    }
    async match(value, context) {
        const input = (0, utilities_1.isFunction)(this.input) ? await this.input(context) : this.input;
        const caseInsensitive = framework_1.container.client.options.caseInsensitiveCommands;
        return caseInsensitive ? input.toLowerCase() === value.toLowerCase() : input === value;
    }
}
exports.SubCommandEntry = SubCommandEntry;
//# sourceMappingURL=SubCommandEntry.js.map