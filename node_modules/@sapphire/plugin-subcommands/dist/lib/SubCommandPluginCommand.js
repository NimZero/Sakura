"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SubCommandPluginCommand = void 0;
const framework_1 = require("@sapphire/framework");
const SubCommandManager_1 = require("./SubCommandManager");
class SubCommandPluginCommand extends framework_1.Command {
    constructor(context, options) {
        super(context, options);
        Object.defineProperty(this, "subCommands", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.subCommands = options.subCommands ? new SubCommandManager_1.SubCommandManager(options.subCommands) : null;
    }
    messageRun(message, args, context) {
        if (!this.subCommands)
            throw new Error(`The command ${this.name} does not have a 'messageRun' method and does not support sub-commands.`);
        return this.subCommands.messageRun({ message, args, context, command: this });
    }
}
exports.SubCommandPluginCommand = SubCommandPluginCommand;
//# sourceMappingURL=SubCommandPluginCommand.js.map